- java bean: là các class có hàm khởi tạo không tham số được đặt là public, từ đó gọi các hàm không tham số tạo thành các object.Ngoài ra còn có các hàm getter, sette).
- spring bean: là các object được quản lý bởi spring. Bất cứ một object nào được khởi tạo, cấu hình từ "sping container" đều được dọc là "sping bean". Spring bean không nhất thiết phải là "java bean".

- "@Conponent" và "@Bean":
  + Nơi sử dụng:
    + "@Component" có thể sử dụng trên bất kỳ lớp Java nào và thường được sử dụng để đánh dấu các thành phần của ứng dụng.
    + "@Bean" thường được sử dụng trong các lớp cấu hình(annotated với "@confuguration") và chỉ có thể sử dụng reen phạm vi các phương thức.
  + Dễ sử dụng:
    + "@Component" dễ sử dụng, chỉ cần thêm annotation lên lớp và Spring sẽ tự đọng quét và đăng ký nó như một bean.
    + "@Bean" đòi hỏi phải viết mã tạo "Bean" và cấu hình "Bean" một các rõ ràng trong các phương thức.
  + Autowiring:
    + Cả "@Component" và "@Bean" đề hỗ trự tự động nối dây (autowiring) bằng cách sử dụng các phương thức khởi tạo (constructor), setter hoặc thuong (field) để dưa các phị thuộc (dependencies) vào bean.
  + Người tạo bean: 
    + Với "@Component" Spring Framework tự dộng tạo vào quẩn lý các bean dựa trên cấu hình vào quết các lớp có annotaion "@Component".
    + Với "@Bean" tự viết mã tạo bean và cấu hình bean.
  + Khuyến nghị sử dụng:
    + "@Component" thích hợp để tạo các bean tong ứng dụng của bạn và dễ sử dụng.
    + "@Bean" thường được sử dụng khi cần kiểm soát cụ thể hơn về việc tạo và cấu hình bean, đặc biệt là khi làm việc với các thư việ bên thứ 3.
  + Số lượng bean cho mỗi lớp:
    + "@Component" mặc định sử dụng kiểu Singleton vho bean, nhưng cũng có thể cấu hình chúng để sử dụng kiểu Prototupe nế cần.
    + "@Bean" cho phét tạo một hoặc nhiều kiểu bean theo ý muốn.
  + Cách khởi tạo:
    + "@Component":  @Component
                      public class MyComponent {
                          // Class definition
                      }
    + "@Bean":  @Configuration
                public class MyConfig {
                    @Bean
                    public MyBean myBean() {
                        return new MyBean();
                    }
                }

